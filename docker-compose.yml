services:

  #servicios
  scrapper:
    build: 
      context: ./scrapper
    ports: 
      - "50051:50051"
    depends_on:
      - kafka
    environment:
      - PYTHONUNBUFFERED=1
      - KAFKA_BROKER=kafka:9092
    networks:
      - distributed_system
      - default
    restart: on-failure

  spark:
    build:
      context: ./spark_service
    depends_on:
      - kafka
      - cassandra
      - elasticsearch
    networks:
      - distributed_system
    environment:
      - PYTHONUNBUFFERED=1
      - KAFKA_BROKER=kafka:9092
      - SPARK_MASTER_HOST=spark
      - SPARK_MASTER_PORT=7077
      - PYSPARK_PYTHON=/usr/bin/python3
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    ports:
      - 7077:7077
    #restart: on-failure
      

  #kafka
  kafka:
    image: bitnami/kafka:3.9
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_BROKER_ID=0
      - KAFKA_ENABLE_KRAFT=yes
    networks:
      - distributed_system
    ports:
      - "9092:9092"

  #almacenamiento y analisis de datos
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - distributed_system

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.1
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - distributed_system

  cassandra:
    image: bitnami/cassandra:4.0
    container_name: cassandra
    volumes:
      - ./cassandra_init:/docker-entrypoint-initdb.d/
    environment:
      - CASSANDRA_HOST=cassandra
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD=cassandra
    ports:
      - "9042:9042"
    networks:
      - distributed_system

networks:
  distributed_system: